<?xml version="1.0"?>

<!--
(c) Copyright JPMorgan Chase Bank & Co., Cisco Systems, Inc., Envoy
Technologies Inc., iMatix Corporation, IONA\ufffd Technologies, Red
Hat, Inc., TWIST Process Innovations, and 29West Inc. 2006.

Copyright (c) 2009 AMQP Working Group.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
1. Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
3. The name of the author may not be used to endorse or promote products
derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<amqp comment="AMQ protocol 0.80" major="8" port="5672" minor="0">
  <constant name="frame method" value="1"/>
  <constant name="frame header" value="2"/>
  <constant name="frame body" value="3"/>
  <constant name="frame oob method" value="4"/>
  <constant name="frame oob header" value="5"/>
  <constant name="frame oob body" value="6"/>
  <constant name="frame trace" value="7"/>
  <constant name="frame heartbeat" value="8"/>
  <constant name="frame min size" value="4096"/>
  <constant name="frame end" value="206"/>
  <constant name="reply success" value="200"/>
  <constant name="not delivered" class="soft error" value="310"/>
  <constant name="content too large" class="soft error" value="311"/>
  <constant name="connection forced" class="hard error" value="320"/>
  <constant name="invalid path" class="hard error" value="402"/>
  <constant name="access refused" class="soft error" value="403"/>
  <constant name="not found" class="soft error" value="404"/>
  <constant name="resource locked" class="soft error" value="405"/>
  <constant name="frame error" class="hard error" value="501"/>
  <constant name="syntax error" class="hard error" value="502"/>
  <constant name="command invalid" class="hard error" value="503"/>
  <constant name="channel error" class="hard error" value="504"/>
  <constant name="resource error" class="hard error" value="506"/>
  <constant name="not allowed" class="hard error" value="530"/>
  <constant name="not implemented" class="hard error" value="540"/>
  <constant name="internal error" class="hard error" value="541"/>
  <domain name="access ticket" type="short">
    <assert check="ne" value="0"/>
  </domain>
  <domain name="class id" type="short"/>
  <domain name="consumer tag" type="shortstr">
    <rule implement="MUST"/>
  </domain>
  <domain name="delivery tag" type="longlong">
    <rule implement="MUST"/>
    <rule implement="MUST"/>
  </domain>
  <domain name="exchange name" type="shortstr">
    <assert check="length" value="127"/>
  </domain>
  <domain name="known hosts" type="shortstr">
    <rule implement="MAY"/>
  </domain>
  <domain name="method id" type="short"/>
  <domain name="no ack" type="bit"/>
  <domain name="no local" type="bit"/>
  <domain name="path" type="shortstr">
    <assert check="notnull"/>
    <assert check="syntax" rule="path"/>
    <assert check="length" value="127"/>
  </domain>
  <domain name="peer properties" type="table">
    <rule implement="SHOULD"/>
  </domain>
  <domain name="queue name" type="shortstr">
    <assert check="length" value="127"/>
  </domain>
  <domain name="redelivered" type="bit">
    <rule implement="SHOULD"/>
    <rule implement="MUST"/>
  </domain>
  <domain name="reply code" type="short">
    <assert check="notnull"/>
  </domain>
  <domain name="reply text" type="shortstr">
    <assert check="notnull"/>
  </domain>
  <class index="10" name="connection" handler="connection">
    <chassis name="server" implement="MUST"/>
    <chassis name="client" implement="MUST"/>
    <method index="10" name="start" synchronous="1">
      <rule implement="MUST"/>
      <rule implement="MUST"/>
      <chassis name="client" implement="MUST"/>
      <response name="start-ok"/>
      <field name="version major" type="octet"/>
      <field name="version minor" type="octet"/>
      <field name="server properties" domain="peer properties"/>
      <field name="mechanisms" type="longstr">
        <see name="security mechanisms"/>
        <assert check="notnull"/>
      </field>
      <field name="locales" type="longstr">
        <rule implement="MUST"/>
        <assert check="notnull"/>
      </field>
    </method>
    <method index="11" name="start-ok" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <field name="client properties" domain="peer properties"/>
      <field name="mechanism" type="shortstr">
        <rule implement="SHOULD"/>
        <rule implement="MUST"/>
        <assert check="notnull"/>
      </field>
      <field name="response" type="longstr">
        <assert check="notnull"/>
      </field>
      <field name="locale" type="shortstr">
        <assert check="notnull"/>
      </field>
    </method>
    <method index="20" name="secure" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <response name="secure-ok"/>
      <field name="challenge" type="longstr">
        <see name="security mechanisms"/>
      </field>
    </method>
    <method index="21" name="secure-ok" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <field name="response" type="longstr">
        <assert check="notnull"/>
      </field>
    </method>
    <method index="30" name="tune" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <response name="tune-ok"/>
      <field name="channel max" type="short"/>
      <field name="frame max" type="long">
        <rule implement="MUST"/>
      </field>
      <field name="heartbeat" type="short"/>
    </method>
    <method index="31" name="tune-ok" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <field name="channel max" type="short">
        <rule implement="MAY"/>
        <assert check="notnull"/>
        <assert field="channel max" check="le" method="tune"/>
      </field>
      <field name="frame max" type="long">
        <rule implement="MUST"/>
      </field>
      <field name="heartbeat" type="short"/>
    </method>
    <method index="40" name="open" synchronous="1">
      <rule implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <response name="open-ok"/>
      <response name="redirect"/>
      <field name="virtual host" domain="path">
        <assert check="regexp" value="^[a-zA-Z0-9/-_]+$"/>
        <rule implement="MUST"/>
        <rule implement="SHOULD"/>
        <rule implement="MAY"/>
      </field>
      <field name="capabilities" type="shortstr"/>
      <field name="insist" type="bit">
        <rule implement="SHOULD"/>
      </field>
    </method>
    <method index="41" name="open-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="known hosts" domain="known hosts"/>
    </method>
    <method index="50" name="redirect" synchronous="1">
      <rule implement="SHOULD"/>
      <chassis name="client" implement="MAY"/>
      <field name="host" type="shortstr">
        <assert check="notnull"/>
      </field>
      <field name="known hosts" domain="known hosts"/>
    </method>
    <method index="60" name="close" synchronous="1">
      <rule implement="MUST"/>
      <rule implement="MAY"/>
      <rule implement="MUST"/>
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <response name="close-ok"/>
      <field name="reply code" domain="reply code"/>
      <field name="reply text" domain="reply text"/>
      <field name="class id" domain="class id"/>
      <field name="method id" domain="method id"/>
    </method>
    <method index="61" name="close-ok" synchronous="1">
      <rule implement="SHOULD"/>
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
    </method>
  </class>
  <class index="20" name="channel" handler="channel">
    <chassis name="server" implement="MUST"/>
    <chassis name="client" implement="MUST"/>
    <method index="10" name="open" synchronous="1">
      <rule implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <response name="open-ok"/>
      <field name="out of band" type="shortstr">
        <assert check="null"/>
      </field>
    </method>
    <method index="11" name="open-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="20" name="flow" synchronous="1">
      <rule implement="MAY"/>
      <rule implement="SHOULD"/>
      <rule implement="MAY"/>
      <rule implement="MAY"/>
      <chassis name="server" implement="MUST"/>
      <chassis name="client" implement="MUST"/>
      <response name="flow-ok"/>
      <field name="active" type="bit"/>
    </method>
    <method index="21" name="flow-ok">
      <chassis name="server" implement="MUST"/>
      <chassis name="client" implement="MUST"/>
      <field name="active" type="bit"/>
    </method>
    <method index="30" name="alert">
      <chassis name="client" implement="MUST"/>
      <field name="reply code" domain="reply code"/>
      <field name="reply text" domain="reply text"/>
      <field name="details" type="table"/>
    </method>
    <method index="40" name="close" synchronous="1">
      <rule implement="MUST"/>
      <rule implement="MAY"/>
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <response name="close-ok"/>
      <field name="reply code" domain="reply code"/>
      <field name="reply text" domain="reply text"/>
      <field name="class id" domain="class id"/>
      <field name="method id" domain="method id"/>
    </method>
    <method index="41" name="close-ok" synchronous="1">
      <rule implement="SHOULD"/>
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
    </method>
  </class>
  <class index="30" name="access" handler="connection">
    <chassis name="server" implement="MUST"/>
    <chassis name="client" implement="MUST"/>
    <method index="10" name="request" synchronous="1">
      <rule implement="MUST"/>
      <rule implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <response name="request-ok"/>
      <field name="realm" domain="path">
        <rule implement="MUST"/>
      </field>
      <field name="exclusive" type="bit"/>
      <field name="passive" type="bit"/>
      <field name="active" type="bit"/>
      <field name="write" type="bit"/>
      <field name="read" type="bit"/>
    </method>
    <method index="11" name="request-ok" synchronous="1">
      <rule implement="MUST"/>
      <rule implement="MUST"/>
      <chassis name="client" implement="MUST"/>
      <field name="ticket" domain="access ticket"/>
    </method>
  </class>
  <class index="40" name="exchange" handler="channel">
    <chassis name="server" implement="MUST"/>
    <chassis name="client" implement="MUST"/>
    <rule implement="MUST"/>
    <rule implement="SHOULD"/>
    <rule implement="MAY"/>
    <rule implement="MUST"/>
    <method index="10" name="declare" synchronous="1">
      <rule implement="SHOULD"/>
      <chassis name="server" implement="MUST"/>
      <response name="declare-ok"/>
      <field name="ticket" domain="access ticket">
        <rule implement="MUST"/>
      </field>
      <field name="exchange" domain="exchange name">
        <rule implement="MUST"/>
        <assert check="regexp" value="^[a-zA-Z0-9-_.:]+$"/>
      </field>
      <field name="type" type="shortstr">
        <rule implement="MUST"/>
        <rule implement="MUST"/>
        <assert check="regexp" value="^[a-zA-Z0-9-_.:]+$"/>
      </field>
      <field name="passive" type="bit">
        <rule implement="MUST"/>
      </field>
      <field name="durable" type="bit">
        <rule implement="MUST"/>
        <rule implement="MUST"/>
      </field>
      <field name="auto delete" type="bit">
        <rule implement="SHOULD"/>
        <rule implement="MUST"/>
      </field>
      <field name="internal" type="bit"/>
      <field name="nowait" type="bit"/>
      <field name="arguments" type="table"/>
    </method>
    <method index="11" name="declare-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="20" name="delete" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="delete-ok"/>
      <field name="ticket" domain="access ticket">
        <rule implement="MUST"/>
      </field>
      <field name="exchange" domain="exchange name">
        <rule implement="MUST"/>
        <assert check="notnull"/>
      </field>
      <field name="if unused" type="bit">
        <rule implement="SHOULD"/>
        <rule implement="SHOULD"/>
      </field>
      <field name="nowait" type="bit"/>
    </method>
    <method index="21" name="delete-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="22" name="bound" synchronous="1">
      <chassis name="server" implement="SHOULD"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
      <field name="queue" domain="queue name"/>
    </method>
    <method index="23" name="bound-ok" synchronous="1">
      <field name="reply code" domain="reply code"/>
      <field name="reply text" domain="reply text"/>
      <chassis name="client" implement="SHOULD"/>
    </method>
  </class>
  <class index="50" name="queue" handler="channel">
    <chassis name="server" implement="MUST"/>
    <chassis name="client" implement="MUST"/>
    <rule implement="MUST"/>
    <method index="10" name="declare" synchronous="1">
      <rule implement="MUST"/>
      <rule implement="SHOULD"/>
      <chassis name="server" implement="MUST"/>
      <response name="declare-ok"/>
      <field name="ticket" domain="access ticket"/>
      <field name="queue" domain="queue name">
        <rule implement="MAY"/>
        <rule implement="MUST"/>
        <assert check="regexp" value="^[a-zA-Z0-9-_.:]*$"/>
      </field>
      <field name="passive" type="bit">
        <rule implement="MUST"/>
      </field>
      <field name="durable" type="bit">
        <rule implement="MUST"/>
        <rule implement="MUST"/>
        <rule implement="MUST"/>
      </field>
      <field name="exclusive" type="bit">
        <rule implement="MUST"/>
        <rule implement="MUST"/>
      </field>
      <field name="auto delete" type="bit">
        <rule implement="SHOULD"/>
        <rule implement="MUST"/>
      </field>
      <field name="nowait" type="bit"/>
      <field name="arguments" type="table"/>
    </method>
    <method index="11" name="declare-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="queue" domain="queue name">
        <assert check="notnull"/>
      </field>
      <field name="message count" type="long"/>
      <field name="consumer count" type="long"/>
    </method>
    <method index="20" name="bind" synchronous="1">
      <rule implement="MUST"/>
      <rule implement="MUST"/>
      <rule implement="MUST"/>
      <rule implement="SHOULD"/>
      <rule implement="MUST"/>
      <rule implement="SHOULD"/>
      <chassis name="server" implement="MUST"/>
      <response name="bind-ok"/>
      <field name="ticket" domain="access ticket"/>
      <field name="queue" domain="queue name"/>
      <field name="exchange" domain="exchange name">
        <rule implement="MUST"/>
      </field>
      <field name="routing key" type="shortstr"/>
      <field name="nowait" type="bit"/>
      <field name="arguments" type="table"/>
    </method>
    <method index="21" name="bind-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="30" name="purge" synchronous="1">
      <rule implement="MUST"/>
      <rule implement="MUST"/>
      <rule implement="MAY"/>
      <chassis name="server" implement="MUST"/>
      <response name="purge-ok"/>
      <field name="ticket" domain="access ticket">
        <rule implement="MUST"/>
      </field>
      <field name="queue" domain="queue name"/>
      <field name="nowait" type="bit"/>
    </method>
    <method index="31" name="purge-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="message count" type="long"/>
    </method>
    <method index="40" name="delete" synchronous="1">
      <rule implement="SHOULD"/>
      <chassis name="server" implement="MUST"/>
      <response name="delete-ok"/>
      <field name="ticket" domain="access ticket"/>
      <field name="queue" domain="queue name"/>
      <field name="if unused" type="bit">
        <rule implement="MUST"/>
      </field>
      <field name="if empty" type="bit"/>
      <field name="nowait" type="bit"/>
    </method>
    <method index="41" name="delete-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="message count" type="long"/>
    </method>
  </class>
  <class index="60" name="basic" handler="channel">
    <chassis name="server" implement="MUST"/>
    <chassis name="client" implement="MAY"/>
    <field name="content type" type="shortstr"/>
    <field name="content encoding" type="shortstr"/>
    <field name="headers" type="table"/>
    <field name="delivery mode" type="octet"/>
    <field name="priority" type="octet"/>
    <field name="correlation id" type="shortstr"/>
    <field name="reply to" type="shortstr"/>
    <field name="expiration" type="shortstr"/>
    <field name="message id" type="shortstr"/>
    <field name="timestamp" type="timestamp"/>
    <field name="type" type="shortstr"/>
    <field name="user id" type="shortstr"/>
    <field name="app id" type="shortstr"/>
    <field name="cluster id" type="shortstr"/>
    <method index="10" name="qos" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="qos-ok"/>
      <field name="prefetch size" type="long"/>
      <field name="prefetch count" type="short"/>
      <field name="global" type="bit"/>
    </method>
    <method index="11" name="qos-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="20" name="consume" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="consume-ok"/>
      <field name="ticket" domain="access ticket"/>
      <field name="queue" domain="queue name"/>
      <field name="consumer tag" domain="consumer tag"/>
      <field name="no local" domain="no local"/>
      <field name="no ack" domain="no ack"/>
      <field name="exclusive" type="bit"/>
      <field name="nowait" type="bit"/>
      <field name="arguments" type="table"/>
    </method>
    <method index="21" name="consume-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="consumer tag" domain="consumer tag"/>
    </method>
    <method index="30" name="cancel" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="cancel-ok"/>
      <field name="consumer tag" domain="consumer tag"/>
      <field name="nowait" type="bit"/>
    </method>
    <method index="31" name="cancel-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="consumer tag" domain="consumer tag"/>
    </method>
    <method index="40" name="publish" content="1">
      <chassis name="server" implement="MUST"/>
      <field name="ticket" domain="access ticket"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
      <field name="mandatory" type="bit"/>
      <field name="immediate" type="bit"/>
    </method>
    <method index="50" name="return" content="1">
      <chassis name="client" implement="MUST"/>
      <field name="reply code" domain="reply code"/>
      <field name="reply text" domain="reply text"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
    </method>
    <method index="60" name="deliver" content="1">
      <chassis name="client" implement="MUST"/>
      <field name="consumer tag" domain="consumer tag"/>
      <field name="delivery tag" domain="delivery tag"/>
      <field name="redelivered" domain="redelivered"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
    </method>
    <method index="70" name="get" synchronous="1">
      <response name="get-ok"/>
      <response name="get-empty"/>
      <chassis name="server" implement="MUST"/>
      <field name="ticket" domain="access ticket"/>
      <field name="queue" domain="queue name"/>
      <field name="no ack" domain="no ack"/>
    </method>
    <method index="71" name="get-ok" content="1" synchronous="1">
      <chassis name="client" implement="MAY"/>
      <field name="delivery tag" domain="delivery tag"/>
      <field name="redelivered" domain="redelivered"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
      <field name="message count" type="long"/>
    </method>
    <method index="72" name="get-empty" synchronous="1">
      <chassis name="client" implement="MAY"/>
      <field name="cluster id" type="shortstr"/>
    </method>
    <method index="80" name="ack">
      <chassis name="server" implement="MUST"/>
      <field name="delivery tag" domain="delivery tag"/>
      <field name="multiple" type="bit"/>
    </method>
    <method index="90" name="reject">
      <chassis name="server" implement="MUST"/>
      <field name="delivery tag" domain="delivery tag"/>
      <field name="requeue" type="bit"/>
    </method>
    <method index="100" name="recover">
      <chassis name="server" implement="MUST"/>
      <field name="requeue" type="bit"/>
      <response name="recover-ok"/>
    </method>
    <method index="101" name="recover-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
  </class>
  <class index="70" name="file" handler="channel">
    <chassis name="server" implement="MAY"/>
    <chassis name="client" implement="MAY"/>
    <field name="content type" type="shortstr"/>
    <field name="content encoding" type="shortstr"/>
    <field name="headers" type="table"/>
    <field name="priority" type="octet"/>
    <field name="reply to" type="shortstr"/>
    <field name="message id" type="shortstr"/>
    <field name="filename" type="shortstr"/>
    <field name="timestamp" type="timestamp"/>
    <field name="cluster id" type="shortstr"/>
    <method index="10" name="qos" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="qos-ok"/>
      <field name="prefetch size" type="long"/>
      <field name="prefetch count" type="short"/>
      <field name="global" type="bit"/>
    </method>
    <method index="11" name="qos-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="20" name="consume" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="consume-ok"/>
      <field name="ticket" domain="access ticket"/>
      <field name="queue" domain="queue name"/>
      <field name="consumer tag" domain="consumer tag"/>
      <field name="no local" domain="no local"/>
      <field name="no ack" domain="no ack"/>
      <field name="exclusive" type="bit"/>
      <field name="nowait" type="bit"/>
    </method>
    <method index="21" name="consume-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="consumer tag" domain="consumer tag"/>
    </method>
    <method index="30" name="cancel" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="cancel-ok"/>
      <field name="consumer tag" domain="consumer tag"/>
      <field name="nowait" type="bit"/>
    </method>
    <method index="31" name="cancel-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="consumer tag" domain="consumer tag"/>
    </method>
    <method index="40" name="open" synchronous="1">
      <response name="open-ok"/>
      <chassis name="server" implement="MUST"/>
      <chassis name="client" implement="MUST"/>
      <field name="identifier" type="shortstr"/>
      <field name="content size" type="longlong"/>
    </method>
    <method index="41" name="open-ok" synchronous="1">
      <response name="stage"/>
      <chassis name="server" implement="MUST"/>
      <chassis name="client" implement="MUST"/>
      <field name="staged size" type="longlong"/>
    </method>
    <method index="50" name="stage" content="1">
      <chassis name="server" implement="MUST"/>
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="60" name="publish">
      <chassis name="server" implement="MUST"/>
      <field name="ticket" domain="access ticket"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
      <field name="mandatory" type="bit"/>
      <field name="immediate" type="bit"/>
      <field name="identifier" type="shortstr"/>
    </method>
    <method index="70" name="return" content="1">
      <chassis name="client" implement="MUST"/>
      <field name="reply code" domain="reply code"/>
      <field name="reply text" domain="reply text"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
    </method>
    <method index="80" name="deliver">
      <chassis name="client" implement="MUST"/>
      <field name="consumer tag" domain="consumer tag"/>
      <field name="delivery tag" domain="delivery tag"/>
      <field name="redelivered" domain="redelivered"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
      <field name="identifier" type="shortstr"/>
    </method>
    <method index="90" name="ack">
      <chassis name="server" implement="MUST"/>
      <field name="delivery tag" domain="delivery tag"/>
      <field name="multiple" type="bit"/>
    </method>
    <method index="100" name="reject">
      <chassis name="server" implement="MUST"/>
      <field name="delivery tag" domain="delivery tag"/>
      <field name="requeue" type="bit"/>
    </method>
  </class>
  <class index="80" name="stream" handler="channel">
    <chassis name="server" implement="MAY"/>
    <chassis name="client" implement="MAY"/>
    <field name="content type" type="shortstr"/>
    <field name="content encoding" type="shortstr"/>
    <field name="headers" type="table"/>
    <field name="priority" type="octet"/>
    <field name="timestamp" type="timestamp"/>
    <method index="10" name="qos" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="qos-ok"/>
      <field name="prefetch size" type="long"/>
      <field name="prefetch count" type="short"/>
      <field name="consume rate" type="long"/>
      <field name="global" type="bit"/>
    </method>
    <method index="11" name="qos-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="20" name="consume" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="consume-ok"/>
      <field name="ticket" domain="access ticket"/>
      <field name="queue" domain="queue name"/>
      <field name="consumer tag" domain="consumer tag"/>
      <field name="no local" domain="no local"/>
      <field name="exclusive" type="bit"/>
      <field name="nowait" type="bit"/>
    </method>
    <method index="21" name="consume-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="consumer tag" domain="consumer tag"/>
    </method>
    <method index="30" name="cancel" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="cancel-ok"/>
      <field name="consumer tag" domain="consumer tag"/>
      <field name="nowait" type="bit"/>
    </method>
    <method index="31" name="cancel-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <field name="consumer tag" domain="consumer tag"/>
    </method>
    <method index="40" name="publish" content="1">
      <chassis name="server" implement="MUST"/>
      <field name="ticket" domain="access ticket"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
      <field name="mandatory" type="bit"/>
      <field name="immediate" type="bit"/>
    </method>
    <method index="50" name="return" content="1">
      <chassis name="client" implement="MUST"/>
      <field name="reply code" domain="reply code"/>
      <field name="reply text" domain="reply text"/>
      <field name="exchange" domain="exchange name"/>
      <field name="routing key" type="shortstr"/>
    </method>
    <method index="60" name="deliver" content="1">
      <chassis name="client" implement="MUST"/>
      <field name="consumer tag" domain="consumer tag"/>
      <field name="delivery tag" domain="delivery tag"/>
      <field name="exchange" domain="exchange name"/>
      <field name="queue" domain="queue name">
        <assert check="notnull"/>
      </field>
    </method>
  </class>
  <class index="90" name="tx" handler="channel">
    <rule implement="SHOULD"/>
    <chassis name="server" implement="SHOULD"/>
    <chassis name="client" implement="MAY"/>
    <method index="10" name="select" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="select-ok"/>
    </method>
    <method index="11" name="select-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="20" name="commit" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="commit-ok"/>
    </method>
    <method index="21" name="commit-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="30" name="rollback" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="rollback-ok"/>
    </method>
    <method index="31" name="rollback-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
  </class>
  <class index="100" name="dtx" handler="channel">
    <chassis name="server" implement="MAY"/>
    <chassis name="client" implement="MAY"/>
    <method index="10" name="select" synchronous="1">
      <chassis name="server" implement="MUST"/>
      <response name="select-ok"/>
    </method>
    <method index="11" name="select-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
    <method index="20" name="start" synchronous="1">
      <chassis name="server" implement="MAY"/>
      <response name="start-ok"/>
      <field name="dtx identifier" type="shortstr">
        <assert check="notnull"/>
      </field>
    </method>
    <method index="21" name="start-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
    </method>
  </class>
  <class index="110" name="tunnel" handler="tunnel">
    <chassis name="server" implement="MAY"/>
    <chassis name="client" implement="MAY"/>
    <field name="headers" type="table"/>
    <field name="proxy name" type="shortstr"/>
    <field name="data name" type="shortstr"/>
    <field name="durable" type="octet"/>
    <field name="broadcast" type="octet"/>
    <method index="10" name="request" content="1">
      <chassis name="server" implement="MUST"/>
      <field name="meta data" type="table"/>
    </method>
  </class>
  <class index="120" name="test" handler="channel">
    <chassis name="server" implement="MUST"/>
    <chassis name="client" implement="SHOULD"/>
    <method index="10" name="integer" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <response name="integer-ok"/>
      <field name="integer 1" type="octet"/>
      <field name="integer 2" type="short"/>
      <field name="integer 3" type="long"/>
      <field name="integer 4" type="longlong"/>
      <field name="operation" type="octet">
        <assert check="enum">
          <value name="add"/>
          <value name="min"/>
          <value name="max"/>
        </assert>
      </field>
    </method>
    <method index="11" name="integer-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <field name="result" type="longlong"/>
    </method>
    <method index="20" name="string" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <response name="string-ok"/>
      <field name="string 1" type="shortstr"/>
      <field name="string 2" type="longstr"/>
      <field name="operation" type="octet">
        <assert check="enum">
          <value name="add"/>
          <value name="min"/>
          <value name="max"/>
        </assert>
      </field>
    </method>
    <method index="21" name="string-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <field name="result" type="longstr"/>
    </method>
    <method index="30" name="table" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <response name="table-ok"/>
      <field name="table" type="table"/>
      <field name="integer op" type="octet">
        <assert check="enum">
          <value name="add"/>
          <value name="min"/>
          <value name="max"/>
        </assert>
      </field>
      <field name="string op" type="octet">
        <assert check="enum">
          <value name="add"/>
          <value name="min"/>
          <value name="max"/>
        </assert>
      </field>
    </method>
    <method index="31" name="table-ok" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <field name="integer result" type="longlong"/>
      <field name="string result" type="longstr"/>
    </method>
    <method index="40" name="content" content="1" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <response name="content-ok"/>
    </method>
    <method index="41" name="content-ok" content="1" synchronous="1">
      <chassis name="client" implement="MUST"/>
      <chassis name="server" implement="MUST"/>
      <field name="content checksum" type="long"/>
    </method>
  </class>
</amqp>
