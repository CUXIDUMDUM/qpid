<?xml version="1.0" encoding="utf-8"?>
<!--

 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.

-->

<section id="Java-Broker-Concepts-Queues">
<title>Queues</title>
<para><emphasis>Queue</emphasis>s are named entities within a <emphasis>Virtual Host</emphasis> that hold/buffer messages for delivery to consumer applications.</para>
<para>Different types of <emphasis>Queue</emphasis> have different delivery semantics. The following Queues types are currently supported:
    <itemizedlist>
        <listitem><para><link linkend="Java-Broker-Queues">Standard</link>: a simple First-In-First-Out (FIFO) queue</para></listitem>
        <listitem><para><link linkend="Java-Broker-Queues-OtherTypes-Priority">Priority</link>: delivery order depends on the priority of each message</para></listitem>
        <listitem><para><link linkend="Java-Broker-Queues-OtherTypes-Sorted">Sorted</link>: delivery order depends on the value of the sorting key property in each message</para></listitem>
        <listitem><para><link linkend="Java-Broker-Queues-OtherTypes-LVQ">Last Value Queue</link>: also known as an LVQ, retains only the last (newest) message received with a given LVQ key value.</para></listitem>
     </itemizedlist>
</para>
<para>Queue configuration details are covered in <xref linkend="Java-Broker-Queues"/>.</para>
</section>
